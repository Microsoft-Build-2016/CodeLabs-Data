@using Forloop.HtmlHelpers
@model MSCorp.AdventureWorks.Web.Areas.Admin.Models.EditProductModel
@{
    ViewBag.Title = "Edit " + Model.Product.ProductName;
    ViewBag.PageClass = "sub-lvl-bg";
    Html.BeginScriptContext();
    Html.AddScriptFile("~/js/adminProduct.js");
    Html.EndScriptContext();
}
@section HomePageHeader {
    @Html.Partial("_SecondaryHeader")
}
<div class="row">
    <div class="col-md-6 sub-head">
        <h2>@Model.Product.ProductName</h2>
        @using (Html.BeginForm())
        {
            if (!String.IsNullOrWhiteSpace(ViewBag.Success))
            {
                <h3 class="alert alert-success" role="alertdialog"> @ViewBag.Success</h3>
            }
            if (!String.IsNullOrWhiteSpace(ViewBag.Error))
            {
                <h3 class="alert alert-warning" role="alertdialog"> @ViewBag.Error</h3>
            }
            @Html.AntiForgeryToken()

            <div class="form-horizontal margin-top">
                @Html.HiddenFor(model => model.Product.ETag)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <br/>
                <br/>
                <br/>
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Product Code")
                    <div class="col-md-offset-1 col-md-9">
                        @Html.EditorFor(model => model.Product.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.ProductCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductCategory, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Product Category")
                    <div class="col-md-offset-1 col-md-9">
                        @Html.DropDownListFor(model => model.Product.ProductCategory, Model.CategoriesList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Product.ProductCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-offset-1 col-md-9">
                        @Html.EditorFor(model => model.Product.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductType, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Product Type")
                    <div class="col-md-offset-1 col-md-9">
                        @Html.EditorFor(model => model.Product.ProductType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.ProductType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ColorName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-offset-1 col-md-9">
                        @Html.DropDownListFor(model => model.ColorName, Model.ColorsList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ColorName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductSizes, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Sizes")
                    <div class="col-md-offset-1 col-md-9">
                        <div class="container">
                            @Html.Hidden("ProductSizes", Html.Encode(String.Join("|", Model.Product.ProductSizes.Select(i => i.Name))))
                            <div id="ProductSizeHtml"></div>

                            <div class="row">
                                <div class="col-md-1">
                                    <input id="AddSize" type="text" class="form-control" />
                                </div>
                                <div class="col-md-1">
                                    <a onclick="addSize();">Add</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-offset-1 col-md-9">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.DiscountedPrice, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Discounted Price")
                    <div class="col-md-offset-1 col-md-9">
                        @Html.EditorFor(model => model.DiscountedPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DiscountedPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Description")
                    <div class="col-md-offset-1 col-md-9">
                        @Html.TextAreaFor(model => model.Product.ProductDescription, new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Product.ProductDescription, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-offset-1 col-md-9">
                        @Html.EditorFor(model => model.Product.Priority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Save" class="btn btn-purchase" />
                    </div>
                    <div class="col-md-offset-3 col-md-9">
                        <a ng-href="~/Api/Search/Product/@Model.Product.ProductCode" class="btn-sub" target="_blank">View Product JSON</a>
                    </div>
                </div>

                

            </div>
        }


    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>
